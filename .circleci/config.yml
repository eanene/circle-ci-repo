

version: 2.1
orbs:
  terraform: "circleci/terraform@3.2.0"
# Define the jobs we want to run for this project
# parameters:
#       ENVIRONMENT:
#         type: enum
#         default: "dev" 
#         enum: ["prod", "dev", "staging" ]
jobs:
  initialize: 
    docker:
      - image: hashicorp/terraform
    working_directory: ~/circle-ci-repo
    steps:      
      - checkout
      - run: 
          name: terraform init and plan
          command: |
            export TF_VAR_env=$ENV
            echo $ENV
            echo $MODULE
            cd environment/$MODULE
            terraform init -reconfigure -backend-config=backend/$ENV.conf
            terraform plan -var env=$ENV -out=$MODULE.tfplan
            pwd && ls -al
#       - store_artifacts:
#             path: ~/circle-ci-repo/environment/vpc/vpc.tfplan
#             destination: artifact-file
      - persist_to_workspace:
          root: ~/circle-ci-repo
          paths: environment/vpc/vpc.tfplan
      
  vpc_apply:
    docker:
      - image: hashicorp/terraform
    working_directory: ~/circle-ci-repo
    steps:
      - checkout
#       - attach_workspace:
#            at: ~/tf-class-repo
      - run: 
          name: terraform apply
          command: |
            export TF_VAR_env=$ENV
            cd environment/$MODULE
            terraform init -reconfigure -backend-config=backend/$ENV.conf
            terraform init && terraform apply -auto-approve
            
  subnet_apply:
      docker:
        - image: hashicorp/terraform
      working_directory: ~/circle-ci-repo
      steps:
        - checkout
  #       - attach_workspace:
  #            at: ~/tf-class-repo
#         - run: 
#             name: terraform apply
#             command: |
#               cd environment/$MODULE
#               terraform init && terraform apply -auto-approve

# Orchestrate our job run sequence
workflows:
  init_and_plan:
    jobs:
      - initialize
      - approve_vpc_plan:
          type: approval
          requires:
            - initialize
      - approve_subnet_plan:
          type: approval
          requires:
            - initialize
      - vpc_apply:
          requires:
            - approve_vpc_plan
      - subnet_apply:
          requires:
            - approve_subnet_plan
